import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.*;

import static jdk.internal.net.http.common.Utils.close;

public class Home extends javax.swing.JFrame implements ActionListener {

    TextEditor textEditorListener;
    ICommandManager commandMng;

    Document document;

    public Home() throws IOException {
        initComponents();

        this.document = this.jTextPane1.getDocument();
        this.textEditorListener = new TextEditor(this.jLabel1,this.jLabel3);
        this.document.addDocumentListener(textEditorListener);


        TextEditorHelper.setTextJPane(this.jTextPane1);
        //AdapterManagerdaki getInstance methodu çaðrýlýyor,
        this.commandMng = AdapterManager.getInstance("CommandManager");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {//arayÃ¼zÃ¼n oluÅŸturulmasÄ±.

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setViewportView(jTextPane1);

        jLabel1.setText("0");

        jLabel2.setText("Character Count :");

        jLabel3.setText("0");

        jLabel4.setText("Word Count :");

        jMenu3.setText("File");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem10.setText("New");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem10(event);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem5.setText("Open");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem5(event);
            }
        });
        jMenu3.add(jMenuItem5);
        jMenuItem5.getAccessibleContext().setAccessibleName("jOpenMenuItem");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem6.setLabel("Save");
        JTextArea textArea = new JTextArea();

        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem6(event);
            }
        });
        jMenu3.add(jMenuItem6);
        jMenuItem6.getAccessibleContext().setAccessibleName("jSaveMenuItem");

        jMenu3.add(jSeparator3);

        jMenuItem9.setText("Exit");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem9(event);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem8.setText("Find And Replace");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem8(event);
            }
        });
        jMenu4.add(jMenuItem8);
        jMenu4.add(jSeparator1);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Undo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem1(event);
            }
        });
        jMenu4.add(jMenuItem1);
        jMenuItem1.getAccessibleContext().setAccessibleName("jUndoMenuItem");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Redo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem2(event);
            }
        });
        jMenu4.add(jMenuItem2);
        jMenuItem2.getAccessibleContext().setAccessibleName("jRedoMenuItem");

        jMenu4.add(jSeparator2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("Cut");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem3(event);
            }
        });
        jMenu4.add(jMenuItem3);
        jMenuItem3.getAccessibleContext().setAccessibleName("jCutMenuItem");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem4.setText("Copy");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem4(event);
            }
        });
        jMenu4.add(jMenuItem4);
        jMenuItem4.getAccessibleContext().setAccessibleName("jCopyMenuItem");


        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem7.setText("Paste");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent event) {
                actionPerformedJMenuItem7(event);
            }
        });

        jMenu4.add(jMenuItem7);
        jMenuItem7.getAccessibleContext().setAccessibleName("jPasteMenuItem");

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addGap(0, 343, Short.MAX_VALUE))

        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel1)
                                                .addComponent(jLabel2)))
                                .addContainerGap(19, Short.MAX_VALUE))
        );
        System.out.println(jLabel4.getText());

        jLabel1.getAccessibleContext().setAccessibleName("jCharCountLabel");

        pack();
    }// </editor-fold>
    
//undo yapabilmek için gerekli olan checkpoint'i tutuyor
    private void actionPerformedJMenuItem1(java.awt.event.ActionEvent event) {      
        //ICommand tipinde verileri olan liste
        List<ICommand> commandIList = new ArrayList<ICommand>();
        
        commandIList.add(new Undo(this.textEditorListener));

        commandMng.execute(commandIList);

        this.jTextPane1.setText(TextEditor.goToCheckpoint());
    }
   // Metindeki cut(kesme) iþlemini gerçekleþtirir
    private void actionPerformedJMenuItem3(java.awt.event.ActionEvent event) { 
        this.jTextPane1.cut();
    }
    //metindeki copy(kopyalama) iþlemini gerçekleþtirir.
    private void actionPerformedJMenuItem4(java.awt.event.ActionEvent event) { 
        this.jTextPane1.copy();
    }


    //Metinde paste(yapýþtýrma) iþlemini gerçekleþtirir
    private void actionPerformedJMenuItem7(java.awt.event.ActionEvent event) { 

        this.jTextPane1.paste();

        String paste = jTextPane1.getText();
        paste = paste + " ";
        jTextPane1.setText(paste);

        System.out.println("Paste event ");

        String text = jTextPane1.getText();

        String[] arrayText = text.split(",|\\ |\\\t|\\\n|\\.|\\:|\\;|\\!|\\?");

        //metnin uzunluðu
        System.out.println("textArray Lenght " + arrayText.length);
        //metnin yazdýrýlmasý
        for (String text1 : arrayText) {
            System.out.println("array result : " + text1);
        }
    }

//uygulamada dosya açma iþlemini gerçekleþtirir.
    private void actionPerformedJMenuItem5(java.awt.event.ActionEvent event) {   

        JFileChooser fileChooser = new JFileChooser();

        int returnValue = fileChooser.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            String text = "";
            File selectedFile = fileChooser.getSelectedFile();

            text = TextEditorHelper.openToFile(selectedFile);
            jTextPane1.setText(text);
        }
    }
//uygulamada dosya kaydetme iþlemini gerçekleþtirir.
    private void actionPerformedJMenuItem6(java.awt.event.ActionEvent event) {  

        JFrame parentFrame = new JFrame();
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("All files", " ","PDF");

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(extensionFilter);
        fileChooser.setDialogTitle("Specify a file to save");

        int userSelection = fileChooser.showSaveDialog(parentFrame);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            TextEditorHelper.saveToFile(selectedFile,jTextPane1.getText());
        }
    }
//redo yapmak için gereken checkpointi tutuyor
    private void actionPerformedJMenuItem2(java.awt.event.ActionEvent evt) {    

        List<ICommand> commandList = new ArrayList<ICommand>();

        commandList.add(new Redo(this.textEditorListener));

        commandMng.execute(commandList);

        this.jTextPane1.setText(TextEditor.goToCheckpoint());
    }
//find and replace fonksiyonlarýný yapan method
    private void actionPerformedJMenuItem8(java.awt.event.ActionEvent evt) {

        JTextField findWord = new JTextField();
        JTextField replaceWord = new JTextField();

        Object[] messageArray = {
                "Find :", findWord,
                "Replace :", replaceWord
        };

        int option = JOptionPane.showConfirmDialog(null, messageArray, "Find And Replace", JOptionPane.OK_CANCEL_OPTION);

        if (option == JOptionPane.OK_OPTION) {
            String text = jTextPane1.getText();
            jTextPane1.setText(text.replaceAll(findWord.getText(), replaceWord.getText()));
        } else {
            System.out.println("Login canceled");
        }
    }
//yeni metin dosyasýný açmak için yazýlan method
    private void actionPerformedJMenuItem10(java.awt.event.ActionEvent evt) { 
        JLabel text = new JLabel();
        //önceki dosya kaydedilmediyse, yeni dosya açmadan kaydetmediniz uyarý veriyor
        text.setText("If you didn't save your file you can lose your work.Â \n Are you sure for create new text ?");

        Object[] message = {
                text
        };

        int option = JOptionPane.showConfirmDialog(null, message, "Create new text", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            jTextPane1.setText("");
        } else {
            System.out.println("Login canceled");
        }
    }
    private void actionPerformedJMenuItem9(java.awt.event.ActionEvent evt) {
        System.exit(0);
        close();
    }

    //uygulamada bilgi kutusunu gerçekleþtiren method
    public static void infoBox(String messageInfo, String barTitle)
    {
        JOptionPane.showMessageDialog(null, messageInfo, "InfoBox: " + barTitle, JOptionPane.INFORMATION_MESSAGE);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {// ArayÃ¼z oluÅŸturulur ve text editÃ¶r baÅŸlatÄ±lÄ±r.
                try {
                    new Home().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration

    @Override
    public void actionPerformed(ActionEvent e) {
        infoBox("test", "title");
    }
}
